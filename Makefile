.DELETE_ON_ERROR:
.PHONY: deps docker all clean deploy validate help
MAKEFLAGS += --warn-undefined-variables
MAKEFLAGS += --no-builtin-rules
OS := $(shell uname)

ifeq ($(OS),Darwin)
	DISTRO = mac
else
	DISTRO = $(shell . /etc/os-release; echo $$ID)
endif

all: globalise.jsonld provenance.jsonld variant-matching.jsonld huc-di-tt.jsonld republic.jsonld text.nq text.md text.html text_intro.html index.html validate

clean: 
	rm -f text.nq text.md text.html text_intro.html index.html

%.jsonld: src/%.yaml
	yq --output-format json $< > $@

%-expanded.json: %.json
	jsonld expand -l -a all $< > $@

%.nq: %.json
	jsonld format -f n-quads -l -a all $< > $@
	@if grep JsonLdEvent $@; then cat "$@"; echo "ERROR: Conversion to n-quads failed">&2; false; fi

%.md: %.json
	python helpers/skosConverter/skos_converter.py to-markdown text.json

%.html: %.md
	sed -r "s/\((.*).md\)/(\1.html)/g" $< | pandoc --from gfm --output $@

index.html: README.md
	sed -r "s/\((.*).md\)/(\1.html)/g" $< | pandoc --from gfm --output $@

validate:
	@for f in *.json; do \
		jsonld lint $$f > tmp; \
		if grep JsonLdEvent tmp; then cat tmp; echo "ERROR: Validation error in $$f">&2; rm tmp; false; fi; \
		echo "$$f .. ok">&2; \
	done

deps:
	@echo "Installing dependencies, you probably want to run this with sudo to install globally, but note that jsonld-cli will be installed globally from NPM rather than from a package!"
ifeq ($(DISTRO),arch)
	pacman -S yq npm pandoc
else ifeq ($(DISTRO),$(filter $(DISTRO), debian ubuntu))
	DEBIAN_FRONTEND=noninteractive apt-get install -y yq npm pandoc
else ifeq ($(DISTRO),$(filter $(DISTRO), fedora redhat))
	yum install yq npm pandoc
else ifeq ($(DISTRO),$(filter $(DISTRO), alpine postmarketos))
	apk add yq npm pandoc
else ifeq ($(DISTRO),mac)
	brew install yq npm pandoc
endif
	npm install -g jsonld-cli

docker:
	docker build -t knaw-huc/ns .

deploy: docker
	docker tag $(shell docker images knaw-huc/ns --format "table {{.ID}}" | tail -n 1) registry.huc.knaw.nl/ns/ns:latest
	docker push registry.huc.knaw.nl/ns/ns:latest
	cd etc/k8s && make deploy && cd -

help:
	@echo "Use 'make <target>' where target is one of:"
	@echo
	@echo "  deps         - Install dependencies. You probably want to run this with sudo to install globally, but note that jsonld-cli will be installed globally from NPM rather than from a package!"
	@echo "  docker       - Build a docker container serving the namespaces over HTTP" 
	@echo "  deploy       - Build and then deploy the docker container on https://ns.huc.knaw.nl . Requires a docker login on https://registry.huc.knaw.nl and a properly configured kubectl for the HuC Production cluster"
	@echo "  validate     - Validate ontologies (*.json)"
	@echo "  clean        - Removes autogenerated data"
	@echo
	@echo "     (in the following targets, substitute 'name' with the base name of the vocabulary)":
	@echo "  name.jsonld         - Generate the JSON-LD context from its YAML source in src/name.yaml"
	@echo "  name-expanded.json  - Generate JSON-LD in expanded form from a JSON-LD ontology in compact form (name.json)"
	@echo "  name.nq             - Generate N-Quads from an ontology in JSON-LD (name.json)"
	@echo "  name.md             - Generate documentation in markdown from a JSON-LD ontology using SKOS (name.json)"
	@echo "  name.html           - Generate documentation in HTML from a JSON-LD ontology using SKOS (name.json)"
	@echo "  index.html          - Generate an index.html from README.md"
	@echo
